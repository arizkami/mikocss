name: MikoCSS CI/CD Pipeline

on:
  push:
    branches: [main, develop]
    tags: ['v*']
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Test CLI + Core
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python deps
        run: |
          pip install -U pip pytest black flake8 isort
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint + Format + Test
        run: |
          black --check .
          isort --check-only .
          flake8 . --max-line-length 127
          pytest -v

      - name: Test CLI
        run: |
          python mikocss.py --help
          python mikocss.py init -p gtk --output test_out
          ls -la test_out

  build:
    name: Build CLI Executable
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build CLI with PyInstaller (.spec)
        run: |
          pyinstaller main.spec --clean --noconfirm

      - name: Upload CLI Artifact
        uses: actions/upload-artifact@v3
        with:
          name: mikocss-${{ matrix.os }}
          path: dist/*
